apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

def applicationName = "easy_asr_library"
def versionMajor = 1
def versionMinor = 1
def versionPatch = 37
def versionId = "bc1"
def file_name = "${applicationName}_v${versionMajor}.${versionMinor}.${versionPatch}-${versionId}.aar"

android {
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileSdkVersion 29
    buildToolsVersion '28.0.3'
    flavorDimensions "default"

    defaultConfig {
        minSdkVersion 20
        targetSdkVersion 29
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        multiDexEnabled true

        libraryVariants.all { variant ->
            variant.outputs.all { output ->
                outputFileName = new File(
                        "${file_name}")
            }
        }
    }

    productFlavors {
        library {

        }
        unity {

        }
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization.
            minifyEnabled false
            // Whether this flavour type should generate a debuggable apk.
            debuggable false
            // Proguard rules to minify library.
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            // Enables code shrinking, obfuscation, and optimization.
            minifyEnabled false
            // Whether this flavour type should generate a debuggable apk.
            debuggable true
            // Proguard rules to minify library.
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        javaMaxHeapSize "8g"
        preDexLibraries false
    }

    if (project.hasProperty('devBuild')) {
        splits.abi.enable = false
        splits.density.enable = false
    }
}

dependencies {
    // *********************************************************************************************
    // * ANDROID-X LIBRARIES
    // *********************************************************************************************
    compileOnly 'androidx.annotation:annotation:1.1.0'

    // *********************************************************************************************
    // * INTERNAL LIBRARIES
    // *********************************************************************************************
    compileOnly files('src/main/libs/unity_classes.jar')
}

def getVersionName = { ->
    return versionMajor + "." + versionMinor + "." + versionPatch
}

def getArtifactId = { ->
    return applicationName
}

def getGroupId = { ->
    return "com.vgraphics"
}

def getGitHubUrl = { ->
    return "https://maven.pkg.github.com/vgraphics/EasyAsr"
}

publishing {
    publications {
        bar(MavenPublication) {
            groupId getGroupId()
            artifactId getArtifactId()
            version getVersionName()
            // Place the path of your artifact here
            artifact("$buildDir/outputs/aar/${file_name}")
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"

            url = uri(getGitHubUrl())
            credentials {
                username = System.getenv("GITHUB_USER_NAME")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}